

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sun Feb 19 03:01:23 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.40
    16                           ; Generated 01/12/2016 GMT
    17                           ; 
    18                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	nvCOMRAM
    51  000001                     __pnvCOMRAM:
    52                           	opt stack 0
    53  000001                     main@state:
    54                           	opt stack 0
    55  000001                     	ds	1
    56  0000                     _LATD	set	3980
    57  0000                     _LATDbits	set	3980
    58  0000                     _TRISD	set	3989
    59                           
    60                           ; #config settings
    61  0000                     
    62                           	psect	cinit
    63  007FB2                     __pcinit:
    64                           	opt stack 0
    65  007FB2                     start_initialization:
    66                           	opt stack 0
    67  007FB2                     __initialization:
    68                           	opt stack 0
    69  007FB2                     end_of_initialization:
    70                           	opt stack 0
    71  007FB2                     __end_of__initialization:
    72                           	opt stack 0
    73  007FB2  0E00               	movlw	low (__Lmediumconst shr (0+16))
    74  007FB4  6EF8               	movwf	tblptru,c
    75  007FB6  0100               	movlb	0
    76  007FB8  EFDE  F03F         	goto	_main	;jump to C main() function
    77                           tblptru	equ	0xFF8
    78                           
    79                           	psect	cstackCOMRAM
    80  000000                     __pcstackCOMRAM:
    81                           	opt stack 0
    82  000000                     tblptru	equ	0xFF8
    83                           
    84                           ; 1 bytes @ 0x0
    85 ;;
    86 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    87 ;;
    88 ;; *************** function _main *****************
    89 ;; Defined at:
    90 ;;		line 19 in file "../main.c"
    91 ;; Parameters:    Size  Location     Type
    92 ;;		None
    93 ;; Auto vars:     Size  Location     Type
    94 ;;		None
    95 ;; Return value:  Size  Location     Type
    96 ;;                  1    wreg      void 
    97 ;; Registers used:
    98 ;;		wreg, status,2, status,0, cstack
    99 ;; Tracked objects:
   100 ;;		On entry : 0/0
   101 ;;		On exit  : 0/0
   102 ;;		Unchanged: 0/0
   103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   104 ;;      Params:         0       0       0       0       0       0       0       0       0
   105 ;;      Locals:         0       0       0       0       0       0       0       0       0
   106 ;;      Temps:          0       0       0       0       0       0       0       0       0
   107 ;;      Totals:         0       0       0       0       0       0       0       0       0
   108 ;;Total ram usage:        0 bytes
   109 ;; Hardware stack levels required when called:    1
   110 ;; This function calls:
   111 ;;		_task_clear_led
   112 ;;		_task_set_led
   113 ;;		_task_toggle_led
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           	psect	text0
   120  007FBC                     __ptext0:
   121                           	opt stack 0
   122  007FBC                     _main:
   123                           	opt stack 30
   124                           
   125                           ;main.c: 20: static char state;
   126                           ;main.c: 23: state = 1;
   127                           
   128                           ;incstack = 0
   129  007FBC  0E01               	movlw	1
   130  007FBE  6E01               	movwf	main@state,c
   131                           
   132                           ;main.c: 24: LATD = 0x00;
   133  007FC0  0E00               	movlw	0
   134  007FC2  6E8C               	movwf	3980,c	;volatile
   135                           
   136                           ;main.c: 25: TRISD = 0xF7;
   137  007FC4  0EF7               	movlw	247
   138  007FC6  6E95               	movwf	3989,c	;volatile
   139                           
   140                           ;main.c: 29: switch(state){
   141                           
   142                           ;main.c: 28: while (1) {
   143  007FC8  D009               	goto	l649
   144  007FCA                     l641:
   145                           
   146                           ;main.c: 31: task_toggle_led();
   147  007FCA  ECD7  F03F         	call	_task_toggle_led	;wreg free
   148                           
   149                           ;main.c: 32: break;
   150  007FCE  D010               	goto	l651
   151  007FD0                     l643:
   152                           
   153                           ;main.c: 34: task_set_led();
   154  007FD0  ECD5  F03F         	call	_task_set_led	;wreg free
   155                           
   156                           ;main.c: 35: break;
   157  007FD4  D00D               	goto	l651
   158  007FD6                     l645:
   159                           
   160                           ;main.c: 37: task_clear_led();
   161  007FD6  ECD3  F03F         	call	_task_clear_led	;wreg free
   162                           
   163                           ;main.c: 39: }
   164                           
   165                           ;main.c: 38: break;
   166  007FDA  D00A               	goto	l651
   167  007FDC                     l649:
   168  007FDC  5001               	movf	main@state,w,c
   169                           
   170                           ; Switch size 1, requested type "space"
   171                           ; Number of cases is 3, Range of values is 1 to 3
   172                           ; switch strategies available:
   173                           ; Name         Instructions Cycles
   174                           ; simple_byte           10     6 (average)
   175                           ;	Chosen strategy is simple_byte
   176  007FDE  0A01               	xorlw	1	; case 1
   177  007FE0  B4D8               	btfsc	status,2,c
   178  007FE2  D7F3               	goto	l641
   179  007FE4  0A03               	xorlw	3	; case 2
   180  007FE6  B4D8               	btfsc	status,2,c
   181  007FE8  D7F3               	goto	l643
   182  007FEA  0A01               	xorlw	1	; case 3
   183  007FEC  B4D8               	btfsc	status,2,c
   184  007FEE  D7F3               	goto	l645
   185  007FF0                     l651:
   186                           
   187                           ;main.c: 42: if (state == 3)
   188  007FF0  0E03               	movlw	3
   189  007FF2  1801               	xorwf	main@state,w,c
   190  007FF4  A4D8               	btfss	status,2,c
   191  007FF6  D002               	goto	l655
   192                           
   193                           ;main.c: 43: state = 0;
   194  007FF8  0E00               	movlw	0
   195  007FFA  6E01               	movwf	main@state,c
   196  007FFC                     l655:
   197                           
   198                           ;main.c: 44: state++;
   199  007FFC  2A01               	incf	main@state,f,c
   200  007FFE  D7EE               	goto	l649
   201  008000                     __end_of_main:
   202                           	opt stack 0
   203                           tblptru	equ	0xFF8
   204                           status	equ	0xFD8
   205                           
   206 ;; *************** function _task_toggle_led *****************
   207 ;; Defined at:
   208 ;;		line 49 in file "../main.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		None
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   222 ;;      Params:         0       0       0       0       0       0       0       0       0
   223 ;;      Locals:         0       0       0       0       0       0       0       0       0
   224 ;;      Temps:          0       0       0       0       0       0       0       0       0
   225 ;;      Totals:         0       0       0       0       0       0       0       0       0
   226 ;;Total ram usage:        0 bytes
   227 ;; Hardware stack levels used:    1
   228 ;; This function calls:
   229 ;;		Nothing
   230 ;; This function is called by:
   231 ;;		_main
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           	psect	text1
   236  007FAE                     __ptext1:
   237                           	opt stack 0
   238  007FAE                     _task_toggle_led:
   239                           	opt stack 30
   240                           
   241                           ;incstack = 0
   242  007FAE  768C               	btg	3980,3,c	;# 
   243  007FB0  0012               	return		;funcret
   244  007FB2                     __end_of_task_toggle_led:
   245                           	opt stack 0
   246                           tblptru	equ	0xFF8
   247                           status	equ	0xFD8
   248                           
   249 ;; *************** function _task_set_led *****************
   250 ;; Defined at:
   251 ;;		line 56 in file "../main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;		None
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		status,2, status,0
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   265 ;;      Params:         0       0       0       0       0       0       0       0       0
   266 ;;      Locals:         0       0       0       0       0       0       0       0       0
   267 ;;      Temps:          0       0       0       0       0       0       0       0       0
   268 ;;      Totals:         0       0       0       0       0       0       0       0       0
   269 ;;Total ram usage:        0 bytes
   270 ;; Hardware stack levels used:    1
   271 ;; This function calls:
   272 ;;		Nothing
   273 ;; This function is called by:
   274 ;;		_main
   275 ;; This function uses a non-reentrant model
   276 ;;
   277                           
   278                           	psect	text2
   279  007FAA                     __ptext2:
   280                           	opt stack 0
   281  007FAA                     _task_set_led:
   282                           	opt stack 30
   283                           
   284                           ;main.c: 57: LATD |= 0x08;
   285                           
   286                           ;incstack = 0
   287  007FAA  868C               	bsf	3980,3,c	;volatile
   288  007FAC  0012               	return		;funcret
   289  007FAE                     __end_of_task_set_led:
   290                           	opt stack 0
   291                           tblptru	equ	0xFF8
   292                           status	equ	0xFD8
   293                           
   294 ;; *************** function _task_clear_led *****************
   295 ;; Defined at:
   296 ;;		line 61 in file "../main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		None
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   310 ;;      Params:         0       0       0       0       0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0       0       0       0       0
   313 ;;      Totals:         0       0       0       0       0       0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels used:    1
   316 ;; This function calls:
   317 ;;		Nothing
   318 ;; This function is called by:
   319 ;;		_main
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text3
   324  007FA6                     __ptext3:
   325                           	opt stack 0
   326  007FA6                     _task_clear_led:
   327                           	opt stack 30
   328                           
   329                           ;main.c: 62: LATDbits.LATD3 = 0;
   330                           
   331                           ;incstack = 0
   332  007FA6  968C               	bcf	3980,3,c	;volatile
   333  007FA8  0012               	return		;funcret
   334  007FAA                     __end_of_task_clear_led:
   335                           	opt stack 0
   336  0000                     tblptru	equ	0xFF8
   337                           status	equ	0xFD8
   338                           tblptru	equ	0xFF8
   339                           status	equ	0xFD8
   340                           
   341                           	psect	rparam
   342  0000                     tblptru	equ	0xFF8
   343                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _task_clear_led
                       _task_set_led
                    _task_toggle_led
 ---------------------------------------------------------------------------------
 (1) _task_toggle_led                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _task_set_led                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _task_clear_led                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _task_clear_led
   _task_set_led
   _task_toggle_led

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       1       1        1.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       1       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       1      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sun Feb 19 03:01:23 2017

                     LATD 000F8C                       l641 7FCA                       l643 7FD0  
                     l651 7FF0                       l645 7FD6                       l655 7FFC  
                     l649 7FDC              __CFG_BOR$OFF 000000   __end_of_task_toggle_led 7FB2  
            __CFG_LVP$OFF 000000              __CFG_WDT$OFF 000000                      _LATD 000F8C  
                    _main 7FBC                      start 0000             __CFG_MCLRE$ON 000000  
            ___param_bank 000000             __CFG_PLLDIV$2 000000                     ?_main 0000  
                   _TRISD 000F95                     status 000FD8           __initialization 7FB2  
            __end_of_main 8000                    ??_main 0000             __activetblptr 000002  
        ?_task_toggle_led 0000   __size_of_task_clear_led 0004                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 7FB2             ___rparam_used 000001  
          __pcstackCOMRAM 0000                __pnvCOMRAM 0001            _task_clear_led 7FA6  
           ?_task_set_led 0000                   __Hparam 0000                   __Lparam 0000  
                 __pcinit 7FB2                   __ramtop 0800                   __ptext0 7FBC  
                 __ptext1 7FAE                   __ptext2 7FAA                   __ptext3 7FA6  
  __end_of_task_clear_led 7FAA      end_of_initialization 7FB2             __Lmediumconst 0000  
          ??_task_set_led 0000           ?_task_clear_led 0000  __size_of_task_toggle_led 0004  
     start_initialization 7FB2      __end_of_task_set_led 7FAE         ??_task_toggle_led 0000  
                _LATDbits 000F8C          ??_task_clear_led 0000                 main@state 0001  
                __Hrparam 0000                  __Lrparam 0000     __size_of_task_set_led 0004  
           __size_of_main 0044              _task_set_led 7FAA     __CFG_CPUDIV$OSC1_PLL2 000000  
         _task_toggle_led 7FAE        __CFG_FOSC$HSPLL_HS 000000  
