

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Feb 05 09:27:34 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F27K40 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _RX1PPS	set	3765
    49  0000                     _RC6PPS	set	3837
    50  0000                     _ANSELCbits	set	3873
    51  0000                     _SP1BRG	set	3995
    52  0000                     _SP1BRGL	set	3995
    53  0000                     _BAUDCON1bits	set	3999
    54  0000                     _RCSTA1bits	set	3997
    55  0000                     _TX1STAbits	set	3998
    56                           
    57                           ; #config settings
    58  0000                     
    59                           	psect	cinit
    60  00010E                     __pcinit:
    61                           	opt stack 0
    62  00010E                     start_initialization:
    63                           	opt stack 0
    64  00010E                     __initialization:
    65                           	opt stack 0
    66  00010E                     end_of_initialization:
    67                           	opt stack 0
    68  00010E                     __end_of__initialization:
    69                           	opt stack 0
    70  00010E  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    71  000110  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    72  000112  0100               	movlb	0
    73  000114  EF7C  F000         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	cstackCOMRAM
    76  000001                     __pcstackCOMRAM:
    77                           	opt stack 0
    78  000001                     ??_isr_low:
    79  000001                     
    80                           ; 1 bytes @ 0x0
    81  000001                     	ds	21
    82  000016                     uart1_init@bdrate:
    83                           	opt stack 0
    84                           
    85                           ; 4 bytes @ 0x15
    86  000016                     	ds	4
    87  00001A                     uart1_init@baud_rate_calc:
    88                           	opt stack 0
    89                           
    90                           ; 1 bytes @ 0x19
    91  00001A                     	ds	1
    92  00001B                     
    93                           ; 1 bytes @ 0x1A
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 15 in file "../main.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, cstack
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   117 ;;Total ram usage:        0 bytes
   118 ;; Hardware stack levels required when called:    2
   119 ;; This function calls:
   120 ;;		_uart1_init
   121 ;; This function is called by:
   122 ;;		Startup code after reset
   123 ;; This function uses a non-reentrant model
   124 ;;
   125                           
   126                           	psect	text0
   127  0000F8                     __ptext0:
   128                           	opt stack 0
   129  0000F8                     _main:
   130                           	opt stack 29
   131                           
   132                           ;main.c: 17: uart1_init(9600);
   133                           
   134                           ;incstack = 0
   135  0000F8  0E80               	movlw	128
   136  0000FA  6E16               	movwf	uart1_init@bdrate,c
   137  0000FC  0E25               	movlw	37
   138  0000FE  6E17               	movwf	uart1_init@bdrate+1,c
   139  000100  0E00               	movlw	0
   140  000102  6E18               	movwf	uart1_init@bdrate+2,c
   141  000104  0E00               	movlw	0
   142  000106  6E19               	movwf	uart1_init@bdrate+3,c
   143  000108  EC65  F000         	call	_uart1_init	;wreg free
   144  00010C                     l46:
   145  00010C  D7FF               	goto	l46
   146  00010E                     __end_of_main:
   147                           	opt stack 0
   148                           
   149 ;; *************** function _uart1_init *****************
   150 ;; Defined at:
   151 ;;		line 11 in file "../../src/uart1_init.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;  bdrate          4   21[COMRAM] unsigned long 
   154 ;; Auto vars:     Size  Location     Type
   155 ;;  baud_rate_ca    1   25[COMRAM] unsigned char 
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, status,2
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   168 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   169 ;;Total ram usage:        5 bytes
   170 ;; Hardware stack levels used:    1
   171 ;; Hardware stack levels required when called:    1
   172 ;; This function calls:
   173 ;;		Nothing
   174 ;; This function is called by:
   175 ;;		_main
   176 ;; This function uses a non-reentrant model
   177 ;;
   178                           
   179                           	psect	text1
   180  0000CA                     __ptext1:
   181                           	opt stack 0
   182  0000CA                     _uart1_init:
   183                           	opt stack 29
   184                           
   185                           ;uart1_init.c: 14: TX1STAbits.BRGH = 1;
   186                           
   187                           ;incstack = 0
   188  0000CA  849E               	bsf	3998,2,c	;volatile
   189                           
   190                           ;uart1_init.c: 15: TX1STAbits.TXEN = 1;
   191  0000CC  8A9E               	bsf	3998,5,c	;volatile
   192                           
   193                           ;uart1_init.c: 16: TX1STAbits.SYNC = 0;
   194  0000CE  989E               	bcf	3998,4,c	;volatile
   195                           
   196                           ;uart1_init.c: 17: TX1STAbits.TX9 = 0;
   197  0000D0  9C9E               	bcf	3998,6,c	;volatile
   198                           
   199                           ;uart1_init.c: 20: RCSTA1bits.RX9 = 0;
   200  0000D2  9C9D               	bcf	3997,6,c	;volatile
   201                           
   202                           ;uart1_init.c: 21: RCSTA1bits.CREN = 0;
   203  0000D4  989D               	bcf	3997,4,c	;volatile
   204                           
   205                           ;uart1_init.c: 22: RCSTA1bits.SPEN = 1;
   206  0000D6  8E9D               	bsf	3997,7,c	;volatile
   207                           
   208                           ;uart1_init.c: 25: RC6PPS = 0x09;
   209  0000D8  0E09               	movlw	9
   210  0000DA  010E               	movlb	14	; () banked
   211  0000DC  6FFD               	movwf	253,b	;volatile
   212                           
   213                           ;uart1_init.c: 26: RX1PPS = 0x17;
   214  0000DE  0E17               	movlw	23
   215  0000E0  6FB5               	movwf	181,b	;volatile
   216                           
   217                           ; BSR set to: 14
   218                           ;uart1_init.c: 27: ANSELCbits.ANSELC7 = 0;
   219  0000E2  010F               	movlb	15	; () banked
   220  0000E4  9F21               	bcf	33,7,b	;volatile
   221                           
   222                           ; BSR set to: 15
   223                           ;uart1_init.c: 30: BAUDCON1bits.BRG16 = 1;
   224  0000E6  869F               	bsf	3999,3,c	;volatile
   225                           
   226                           ;uart1_init.c: 32: uInt8_t baud_rate_calc = 64000000/(4*(9600+1));
   227  0000E8  0ECA               	movlw	202
   228  0000EA  6E1A               	movwf	uart1_init@baud_rate_calc,c
   229                           
   230                           ; BSR set to: 15
   231                           ;uart1_init.c: 33: SP1BRG = baud_rate_calc;
   232  0000EC  C01A  FF9B         	movff	uart1_init@baud_rate_calc,3995	;volatile
   233  0000F0  6A9C               	clrf	3996,c	;volatile
   234                           
   235                           ;uart1_init.c: 34: SP1BRGL = 0x00;
   236  0000F2  0E00               	movlw	0
   237  0000F4  6E9B               	movwf	3995,c	;volatile
   238                           
   239                           ; BSR set to: 15
   240  0000F6  0012               	return		;funcret
   241  0000F8                     __end_of_uart1_init:
   242                           	opt stack 0
   243                           
   244 ;; *************** function _isr_low *****************
   245 ;; Defined at:
   246 ;;		line 10 in file "../main.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;		None
   249 ;; Auto vars:     Size  Location     Type
   250 ;;		None
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		None
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   262 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   263 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   264 ;;Total ram usage:       21 bytes
   265 ;; Hardware stack levels used:    1
   266 ;; This function calls:
   267 ;;		Nothing
   268 ;; This function is called by:
   269 ;;		Interrupt level 1
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	intcodelo
   274  000018                     __pintcodelo:
   275                           	opt stack 0
   276  000018                     _isr_low:
   277                           	opt stack 29
   278                           
   279                           ; BSR set to: 15
   280                           ;incstack = 0
   281  000018  801B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   282  00001A  CFD8 F001          	movff	status,??_isr_low
   283  00001E  CFE8 F002          	movff	wreg,??_isr_low+1
   284  000022  CFE0 F003          	movff	bsr,??_isr_low+2
   285  000026  CFFA F004          	movff	pclath,??_isr_low+3
   286  00002A  CFFB F005          	movff	pclatu,??_isr_low+4
   287  00002E  CFE9 F006          	movff	fsr0l,??_isr_low+5
   288  000032  CFEA F007          	movff	fsr0h,??_isr_low+6
   289  000036  CFE1 F008          	movff	fsr1l,??_isr_low+7
   290  00003A  CFE2 F009          	movff	fsr1h,??_isr_low+8
   291  00003E  CFD9 F00A          	movff	fsr2l,??_isr_low+9
   292  000042  CFDA F00B          	movff	fsr2h,??_isr_low+10
   293  000046  CFF3 F00C          	movff	prodl,??_isr_low+11
   294  00004A  CFF4 F00D          	movff	prodh,??_isr_low+12
   295  00004E  CFF6 F00E          	movff	tblptrl,??_isr_low+13
   296  000052  CFF7 F00F          	movff	tblptrh,??_isr_low+14
   297  000056  CFF8 F010          	movff	tblptru,??_isr_low+15
   298  00005A  CFF5 F011          	movff	tablat,??_isr_low+16
   299  00005E  C01B  F012         	movff	btemp,??_isr_low+17
   300  000062  C01C  F013         	movff	btemp+1,??_isr_low+18
   301  000066  C01D  F014         	movff	btemp+2,??_isr_low+19
   302  00006A  C01E  F015         	movff	btemp+3,??_isr_low+20
   303  00006E  C015  F01E         	movff	??_isr_low+20,btemp+3
   304  000072  C014  F01D         	movff	??_isr_low+19,btemp+2
   305  000076  C013  F01C         	movff	??_isr_low+18,btemp+1
   306  00007A  C012  F01B         	movff	??_isr_low+17,btemp
   307  00007E  C011  FFF5         	movff	??_isr_low+16,tablat
   308  000082  C010  FFF8         	movff	??_isr_low+15,tblptru
   309  000086  C00F  FFF7         	movff	??_isr_low+14,tblptrh
   310  00008A  C00E  FFF6         	movff	??_isr_low+13,tblptrl
   311  00008E  C00D  FFF4         	movff	??_isr_low+12,prodh
   312  000092  C00C  FFF3         	movff	??_isr_low+11,prodl
   313  000096  C00B  FFDA         	movff	??_isr_low+10,fsr2h
   314  00009A  C00A  FFD9         	movff	??_isr_low+9,fsr2l
   315  00009E  C009  FFE2         	movff	??_isr_low+8,fsr1h
   316  0000A2  C008  FFE1         	movff	??_isr_low+7,fsr1l
   317  0000A6  C007  FFEA         	movff	??_isr_low+6,fsr0h
   318  0000AA  C006  FFE9         	movff	??_isr_low+5,fsr0l
   319  0000AE  C005  FFFB         	movff	??_isr_low+4,pclatu
   320  0000B2  C004  FFFA         	movff	??_isr_low+3,pclath
   321  0000B6  C003  FFE0         	movff	??_isr_low+2,bsr
   322  0000BA  C002  FFE8         	movff	??_isr_low+1,wreg
   323  0000BE  C001  FFD8         	movff	??_isr_low,status
   324  0000C2  901B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   325  0000C4  0010               	retfie	
   326  0000C6                     __end_of_isr_low:
   327                           	opt stack 0
   328  0000                     pclatu	equ	0xFFB
   329                           pclath	equ	0xFFA
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           prodh	equ	0xFF4
   335                           prodl	equ	0xFF3
   336                           fsr0h	equ	0xFEA
   337                           fsr0l	equ	0xFE9
   338                           wreg	equ	0xFE8
   339                           fsr1h	equ	0xFE2
   340                           fsr1l	equ	0xFE1
   341                           bsr	equ	0xFE0
   342                           fsr2h	equ	0xFDA
   343                           fsr2l	equ	0xFD9
   344                           status	equ	0xFD8
   345                           pclatu	equ	0xFFB
   346                           pclath	equ	0xFFA
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           prodh	equ	0xFF4
   352                           prodl	equ	0xFF3
   353                           fsr0h	equ	0xFEA
   354                           fsr0l	equ	0xFE9
   355                           wreg	equ	0xFE8
   356                           fsr1h	equ	0xFE2
   357                           fsr1l	equ	0xFE1
   358                           bsr	equ	0xFE0
   359                           fsr2h	equ	0xFDA
   360                           fsr2l	equ	0xFD9
   361                           status	equ	0xFD8
   362                           
   363                           	psect	rparam
   364  0000                     pclatu	equ	0xFFB
   365                           pclath	equ	0xFFA
   366                           tblptru	equ	0xFF8
   367                           tblptrh	equ	0xFF7
   368                           tblptrl	equ	0xFF6
   369                           tablat	equ	0xFF5
   370                           prodh	equ	0xFF4
   371                           prodl	equ	0xFF3
   372                           fsr0h	equ	0xFEA
   373                           fsr0l	equ	0xFE9
   374                           wreg	equ	0xFE8
   375                           fsr1h	equ	0xFE2
   376                           fsr1l	equ	0xFE1
   377                           bsr	equ	0xFE0
   378                           fsr2h	equ	0xFDA
   379                           fsr2l	equ	0xFD9
   380                           status	equ	0xFD8
   381                           
   382                           	psect	temp
   383  00001B                     btemp:
   384                           	opt stack 0
   385  00001B                     	ds	1
   386  0000                     int$flags	set	btemp
   387  0000                     wtemp6	set	btemp+1
   388                           pclatu	equ	0xFFB
   389                           pclath	equ	0xFFA
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           prodh	equ	0xFF4
   395                           prodl	equ	0xFF3
   396                           fsr0h	equ	0xFEA
   397                           fsr0l	equ	0xFE9
   398                           wreg	equ	0xFE8
   399                           fsr1h	equ	0xFE2
   400                           fsr1l	equ	0xFE1
   401                           bsr	equ	0xFE0
   402                           fsr2h	equ	0xFDA
   403                           fsr2l	equ	0xFD9
   404                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_uart1_init

Critical Paths under _isr_low in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr_low in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_low in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_low in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_low in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_low in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_low in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_low in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_low in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr_low in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr_low in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr_low in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr_low in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr_low in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr_low in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr_low in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      99
                         _uart1_init
 ---------------------------------------------------------------------------------
 (1) _uart1_init                                           5     1      4      99
                                             21 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr_low                                             21    21      0       0
                                              0 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart1_init

 _isr_low (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     1A      1A       1       27.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BIGRAM             E87      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Feb 05 09:27:34 2020

               __CFG_CP$OFF 000000                          l46 010C                          bsr 000FE0  
               __CFG_LVP$ON 000000                __CFG_CPD$OFF 000000                         wreg 000FE8  
              __CFG_ZCD$OFF 000000               __CFG_FCMEN$ON 000000                        _main 00F8  
                      fsr0h 000FEA                        fsr1h 000FE2                        fsr2h 000FDA  
                      fsr0l 000FE9                        fsr1l 000FE1                        fsr2l 000FD9  
                      btemp 001B                        prodh 000FF4                        prodl 000FF3  
                      start 00C6               __CFG_CSWEN$ON 000000                ___param_bank 000000  
             __CFG_SCANE$ON 000000                _BAUDCON1bits 000F9F                       ?_main 0001  
            __CFG_DEBUG$OFF 000000               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000               __CFG_WRT4$OFF 000000  
             __CFG_WRT5$OFF 000000               __CFG_WRT6$OFF 000000               __CFG_WRT7$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000              __CFG_EBTR4$OFF 000000              __CFG_EBTR5$OFF 000000  
            __CFG_EBTR6$OFF 000000              __CFG_EBTR7$OFF 000000               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
        __CFG_MCLRE$EXTMCLR 000000             __end_of_isr_low 00C6                       pclath 000FFA  
                     tablat 000FF5                       status 000FD8                       wtemp6 001C  
           __initialization 010E                __end_of_main 010E                      ??_main 001B  
             __activetblptr 000000                      _RC6PPS 000EFD                      _SP1BRG 000F9B  
                    _RX1PPS 000EB5              __CFG_PWRTE$OFF 000000              __CFG_XINST$OFF 000000  
            __CFG_STVREN$ON 000000                   ??_isr_low 0001                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                  __accesstop 0060  
   __end_of__initialization 010E               ___rparam_used 000001              __pcstackCOMRAM 0001  
                   _SP1BRGL 000F9B                     __Hparam 0000                     __Lparam 0000  
__CFG_RSTOSC$HFINTOSC_64MHZ 000000                     __pcinit 010E                     __ramtop 0F00  
                   __ptext0 00F8                     __ptext1 00CA                     _isr_low 0018  
      end_of_initialization 010E                  _uart1_init 00CA       __CFG_WDTCPS$WDTCPS_12 000000  
      __CFG_WDTCCS$HFINTOSC 000000            __CFG_FEXTOSC$OFF 000000         start_initialization 010E  
               ?_uart1_init 0016            __CFG_LPBOREN$OFF 000000            __CFG_PPS1WAY$OFF 000000  
               __pintcodelo 0018         __size_of_uart1_init 002E                    ?_isr_low 0001  
          __CFG_WDTE$SWDTEN 000000         __CFG_BORV$VBOR_2P45 000000                    __Hrparam 0000  
                  __Lrparam 0000          __CFG_BOREN$SBORDIS 000000                  _ANSELCbits 000F21  
          __size_of_isr_low 00AE                ??_uart1_init 001A               __size_of_main 0016  
      __CFG_WDTCWS$WDTCWS_7 000000                    int$flags 001B          __end_of_uart1_init 00F8  
  uart1_init@baud_rate_calc 001A                    intlevel1 0000           __CFG_CLKOUTEN$OFF 000000  
                _RCSTA1bits 000F9D                  _TX1STAbits 000F9E            uart1_init@bdrate 0016  
