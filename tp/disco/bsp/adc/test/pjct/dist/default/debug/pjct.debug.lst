

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Feb 04 15:41:07 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F27K40 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _ANSELAbits	set	3857
    48  0000                     _ADPCHbits	set	3935
    49  0000                     _ADREFbits	set	3928
    50  0000                     _ADRESH	set	3940
    51  0000                     _LATA	set	3971
    52  0000                     _ADCON0bits	set	3936
    53  0000                     _LATAbits	set	3971
    54  0000                     _TRISAbits	set	3976
    55                           
    56                           ; #config settings
    57  0000                     
    58                           	psect	cinit
    59  01FFAC                     __pcinit:
    60                           	opt stack 0
    61  01FFAC                     start_initialization:
    62                           	opt stack 0
    63  01FFAC                     __initialization:
    64                           	opt stack 0
    65  01FFAC                     end_of_initialization:
    66                           	opt stack 0
    67  01FFAC                     __end_of__initialization:
    68                           	opt stack 0
    69  01FFAC  0100               	movlb	0
    70  01FFAE  EFDE  F0FF         	goto	_main	;jump to C main() function
    71                           
    72                           	psect	cstackCOMRAM
    73  000000                     __pcstackCOMRAM:
    74                           	opt stack 0
    75  000000                     
    76                           ; 1 bytes @ 0x0
    77 ;;
    78 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    79 ;;
    80 ;; *************** function _main *****************
    81 ;; Defined at:
    82 ;;		line 8 in file "../main.c"
    83 ;; Parameters:    Size  Location     Type
    84 ;;		None
    85 ;; Auto vars:     Size  Location     Type
    86 ;;		None
    87 ;; Return value:  Size  Location     Type
    88 ;;                  1    wreg      void 
    89 ;; Registers used:
    90 ;;		wreg, status,2, cstack
    91 ;; Tracked objects:
    92 ;;		On entry : 0/0
    93 ;;		On exit  : 0/0
    94 ;;		Unchanged: 0/0
    95 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
    96 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    97 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    98 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
    99 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   100 ;;Total ram usage:        0 bytes
   101 ;; Hardware stack levels required when called:    1
   102 ;; This function calls:
   103 ;;		_adc_init
   104 ;;		_adc_read
   105 ;; This function is called by:
   106 ;;		Startup code after reset
   107 ;; This function uses a non-reentrant model
   108 ;;
   109                           
   110                           	psect	text0
   111  01FFBC                     __ptext0:
   112                           	opt stack 0
   113  01FFBC                     _main:
   114                           	opt stack 30
   115                           
   116                           ;main.c: 12: TRISAbits.TRISA4 = 0;
   117                           
   118                           ;incstack = 0
   119  01FFBC  9888               	bcf	3976,4,c	;volatile
   120                           
   121                           ;main.c: 13: LATAbits.LATA4 = 1;
   122  01FFBE  8883               	bsf	3971,4,c	;volatile
   123                           
   124                           ;main.c: 15: TRISAbits.TRISA5 = 0;
   125  01FFC0  9A88               	bcf	3976,5,c	;volatile
   126                           
   127                           ;main.c: 16: LATAbits.LATA5 = 1;
   128  01FFC2  8A83               	bsf	3971,5,c	;volatile
   129                           
   130                           ;main.c: 18: TRISAbits.TRISA6 = 0;
   131  01FFC4  9C88               	bcf	3976,6,c	;volatile
   132                           
   133                           ;main.c: 19: LATAbits.LATA6 = 1;
   134  01FFC6  8C83               	bsf	3971,6,c	;volatile
   135                           
   136                           ;main.c: 21: TRISAbits.TRISA7 = 0;
   137  01FFC8  9E88               	bcf	3976,7,c	;volatile
   138                           
   139                           ;main.c: 22: LATAbits.LATA7 = 1;
   140  01FFCA  8E83               	bsf	3971,7,c	;volatile
   141                           
   142                           ;main.c: 24: adc_init();
   143  01FFCC  ECEE  F0FF         	call	_adc_init	;wreg free
   144                           
   145                           ;main.c: 25: ADCON0bits.ADON = 1;;
   146  01FFD0  8E60               	bsf	3936,7,c	;volatile
   147  01FFD2                     
   148                           ;main.c: 28: LATA = adc_read();
   149  01FFD2  ECD9  F0FF         	call	_adc_read	;wreg free
   150  01FFD6  6E83               	movwf	3971,c	;volatile
   151  01FFD8  F000               	nop		;# 
   152  01FFDA  D7FB               	goto	l17
   153  01FFDC                     __end_of_main:
   154                           	opt stack 0
   155                           
   156 ;; *************** function _adc_read *****************
   157 ;; Defined at:
   158 ;;		line 9 in file "../../src/adc_read.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;		None
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      unsigned char 
   165 ;; Registers used:
   166 ;;		wreg, status,2
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   176 ;;Total ram usage:        0 bytes
   177 ;; Hardware stack levels used:    1
   178 ;; This function calls:
   179 ;;		Nothing
   180 ;; This function is called by:
   181 ;;		_main
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           	psect	text1
   186  01FFB2                     __ptext1:
   187                           	opt stack 0
   188  01FFB2                     _adc_read:
   189                           	opt stack 30
   190                           
   191                           ;adc_read.c: 11: ADCON0bits.ADGO = 1;;
   192                           
   193                           ;incstack = 0
   194  01FFB2  8060               	bsf	3936,0,c	;volatile
   195  01FFB4  B060               	btfsc	3936,0,c	;volatile
   196  01FFB6  D7FE               	goto	l41
   197                           
   198                           ;adc_read.c: 13: return ADRESH;
   199  01FFB8  5064               	movf	3940,w,c	;volatile
   200  01FFBA  0012               	return	
   201  01FFBC                     __end_of_adc_read:
   202                           	opt stack 0
   203                           
   204 ;; *************** function _adc_init *****************
   205 ;; Defined at:
   206 ;;		line 9 in file "../../src/adc_init.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		None
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   224 ;;Total ram usage:        0 bytes
   225 ;; Hardware stack levels used:    1
   226 ;; This function calls:
   227 ;;		Nothing
   228 ;; This function is called by:
   229 ;;		_main
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           	psect	text2
   234  01FFDC                     __ptext2:
   235                           	opt stack 0
   236  01FFDC                     _adc_init:
   237                           	opt stack 30
   238                           
   239                           ;adc_init.c: 14: ADCON0bits.ADON = 0 ;
   240                           
   241                           ;incstack = 0
   242  01FFDC  9E60               	bcf	3936,7,c	;volatile
   243                           
   244                           ;adc_init.c: 15: ADCON0bits.ADCONT = 0 ;
   245  01FFDE  9C60               	bcf	3936,6,c	;volatile
   246                           
   247                           ;adc_init.c: 16: ADCON0bits.ADCS = 1 ;
   248  01FFE0  8860               	bsf	3936,4,c	;volatile
   249                           
   250                           ;adc_init.c: 17: ADCON0bits.ADFM = 0 ;
   251  01FFE2  9460               	bcf	3936,2,c	;volatile
   252                           
   253                           ;adc_init.c: 18: ADCON0bits.ADGO = 0 ;
   254  01FFE4  9060               	bcf	3936,0,c	;volatile
   255                           
   256                           ;adc_init.c: 22: ADREFbits.ADNREF = 0 ;
   257  01FFE6  010F               	movlb	15	; () banked
   258  01FFE8  9958               	bcf	88,4,b	;volatile
   259                           
   260                           ;adc_init.c: 23: ADREFbits.ADPREF1 = 0 ;
   261  01FFEA  9358               	bcf	88,1,b	;volatile
   262                           
   263                           ;adc_init.c: 24: ADREFbits.ADPREF0 = 0 ;
   264  01FFEC  9158               	bcf	88,0,b	;volatile
   265                           
   266                           ;adc_init.c: 28: ADPCHbits.ADPCH = 0 ;
   267  01FFEE  915F               	bcf	95,0,b	;volatile
   268  01FFF0  935F               	bcf	95,1,b	;volatile
   269  01FFF2  955F               	bcf	95,2,b	;volatile
   270  01FFF4  975F               	bcf	95,3,b	;volatile
   271  01FFF6  995F               	bcf	95,4,b	;volatile
   272  01FFF8  9B5F               	bcf	95,5,b	;volatile
   273                           
   274                           ;adc_init.c: 32: TRISAbits.TRISA0 = 1 ;
   275  01FFFA  8088               	bsf	3976,0,c	;volatile
   276                           
   277                           ;adc_init.c: 33: ANSELAbits.ANSELA0 = 1 ;
   278  01FFFC  8111               	bsf	17,0,b	;volatile
   279                           
   280                           ; BSR set to: 15
   281  01FFFE  0012               	return		;funcret
   282  020000                     __end_of_adc_init:
   283                           	opt stack 0
   284  0000                     
   285                           	psect	rparam


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _adc_init
                           _adc_read
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _adc_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BIGRAM             E87      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Feb 04 15:41:07 2020

               __CFG_CP$OFF 000000                          l41 FFB4                          l17 FFD2  
               __CFG_LVP$ON 000000                __CFG_CPD$OFF 000000                __CFG_ZCD$OFF 000000  
                      _LATA 000F83               __CFG_FCMEN$ON 000000                        _main FFBC  
                      start 0002               __CFG_CSWEN$ON 000000                ___param_bank 000000  
             __CFG_SCANE$ON 000000                       ?_main 0000              __CFG_DEBUG$OFF 000000  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000  
             __CFG_WRT3$OFF 000000               __CFG_WRT4$OFF 000000               __CFG_WRT5$OFF 000000  
             __CFG_WRT6$OFF 000000               __CFG_WRT7$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
            __CFG_EBTR4$OFF 000000              __CFG_EBTR5$OFF 000000              __CFG_EBTR6$OFF 000000  
            __CFG_EBTR7$OFF 000000               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000          __CFG_MCLRE$EXTMCLR 000000  
           __initialization FFAC                __end_of_main FFDC                      ??_main 0000  
             __activetblptr 000000                      _ADRESH 000F64            __end_of_adc_init 0000  
          __end_of_adc_read FFBC              __CFG_PWRTE$OFF 000000              __CFG_XINST$OFF 000000  
            __CFG_STVREN$ON 000000                  __accesstop 0060     __end_of__initialization FFAC  
             ___rparam_used 000001              __pcstackCOMRAM 0000                   ?_adc_init 0000  
                 ?_adc_read 0000                   _ADPCHbits 000F5F                   _ADREFbits 000F58  
                   __Hparam 0000                     __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                   __pcinit FFAC                     __ramtop 0F00                  ??_adc_init 0000  
                ??_adc_read 0000                     __ptext0 FFBC                     __ptext1 FFB2  
                   __ptext2 FFDC        end_of_initialization FFAC       __CFG_WDTCPS$WDTCPS_12 000000  
      __CFG_WDTCCS$HFINTOSC 000000                   _TRISAbits 000F88            __CFG_FEXTOSC$OFF 000000  
       start_initialization FFAC            __CFG_LPBOREN$OFF 000000           __size_of_adc_init 0024  
         __size_of_adc_read 000A            __CFG_PPS1WAY$OFF 000000            __CFG_WDTE$SWDTEN 000000  
                  _LATAbits 000F83         __CFG_BORV$VBOR_2P45 000000                  _ADCON0bits 000F60  
                  __Hrparam 0000                    __Lrparam 0000          __CFG_BOREN$SBORDIS 000000  
                  _adc_init FFDC                    _adc_read FFB2                  _ANSELAbits 000F11  
             __size_of_main 0020        __CFG_WDTCWS$WDTCWS_7 000000           __CFG_CLKOUTEN$OFF 000000  
